//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Settings/Input/GameInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInput"",
    ""maps"": [
        {
            ""name"": ""UnitCursorMode"",
            ""id"": ""d149482c-af0a-47ab-8151-5b0d4e681f91"",
            ""actions"": [
                {
                    ""name"": ""MouseLeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""0e8b08b0-2eb2-4c0d-963d-39131559406b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousPoint"",
                    ""type"": ""Value"",
                    ""id"": ""2deec084-32cb-4fe5-98a3-d7cb2e5ed6bd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""KeyboardCtrl"",
                    ""type"": ""Button"",
                    ""id"": ""13cad525-184b-41e6-9fb6-870fcd26bec6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grap"",
                    ""type"": ""Button"",
                    ""id"": ""c474aa8a-82e4-4d1a-b576-30933af57429"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scale"",
                    ""type"": ""Button"",
                    ""id"": ""3d04963d-ba19-4e39-8552-f3d519847abb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Button"",
                    ""id"": ""9d4cf76a-577b-48bd-b443-1e562820781c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyboardX"",
                    ""type"": ""Button"",
                    ""id"": ""5134d171-bfb3-4581-8344-0924614b7569"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyboardY"",
                    ""type"": ""Button"",
                    ""id"": ""875174de-b29b-4251-88c2-620e6d57e2df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyboardZ"",
                    ""type"": ""Button"",
                    ""id"": ""800d3a91-bc44-4d83-aab0-0bdf74bb1319"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyboardW"",
                    ""type"": ""Button"",
                    ""id"": ""c0257bca-6842-4122-9645-3180a948d35b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""690f8d54-800e-4ccf-a75d-3687b87e1dd4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""65f5aca4-346d-4e12-ad7e-117c6ea04099"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousPoint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15f1cbe7-9136-41cb-bd42-77a213d592b6"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""601243ae-8af9-439f-9ce1-4ee260860d99"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardCtrl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c0b35af-0144-4db3-a9a1-7fb6ff37504c"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6287069-7f6e-43ab-9bd4-5ff2d1227d29"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scale"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4cbc145c-7a29-4484-a9c7-0627bb2b6b71"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b5117ef-fcce-43bc-bdbd-101bd05162aa"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef5c0146-efca-4539-84d7-1c5441f941e2"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e7a2ff4-2f14-4a60-b795-965a9b06a475"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardZ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ee40951-e1db-468a-be7d-73f2423143d9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38c38ec1-e8b3-497b-bd4b-efbad90bdf5e"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // UnitCursorMode
        m_UnitCursorMode = asset.FindActionMap("UnitCursorMode", throwIfNotFound: true);
        m_UnitCursorMode_MouseLeftClick = m_UnitCursorMode.FindAction("MouseLeftClick", throwIfNotFound: true);
        m_UnitCursorMode_MousPoint = m_UnitCursorMode.FindAction("MousPoint", throwIfNotFound: true);
        m_UnitCursorMode_KeyboardCtrl = m_UnitCursorMode.FindAction("KeyboardCtrl", throwIfNotFound: true);
        m_UnitCursorMode_Grap = m_UnitCursorMode.FindAction("Grap", throwIfNotFound: true);
        m_UnitCursorMode_Scale = m_UnitCursorMode.FindAction("Scale", throwIfNotFound: true);
        m_UnitCursorMode_Rotation = m_UnitCursorMode.FindAction("Rotation", throwIfNotFound: true);
        m_UnitCursorMode_KeyboardX = m_UnitCursorMode.FindAction("KeyboardX", throwIfNotFound: true);
        m_UnitCursorMode_KeyboardY = m_UnitCursorMode.FindAction("KeyboardY", throwIfNotFound: true);
        m_UnitCursorMode_KeyboardZ = m_UnitCursorMode.FindAction("KeyboardZ", throwIfNotFound: true);
        m_UnitCursorMode_KeyboardW = m_UnitCursorMode.FindAction("KeyboardW", throwIfNotFound: true);
        m_UnitCursorMode_MouseScroll = m_UnitCursorMode.FindAction("MouseScroll", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // UnitCursorMode
    private readonly InputActionMap m_UnitCursorMode;
    private IUnitCursorModeActions m_UnitCursorModeActionsCallbackInterface;
    private readonly InputAction m_UnitCursorMode_MouseLeftClick;
    private readonly InputAction m_UnitCursorMode_MousPoint;
    private readonly InputAction m_UnitCursorMode_KeyboardCtrl;
    private readonly InputAction m_UnitCursorMode_Grap;
    private readonly InputAction m_UnitCursorMode_Scale;
    private readonly InputAction m_UnitCursorMode_Rotation;
    private readonly InputAction m_UnitCursorMode_KeyboardX;
    private readonly InputAction m_UnitCursorMode_KeyboardY;
    private readonly InputAction m_UnitCursorMode_KeyboardZ;
    private readonly InputAction m_UnitCursorMode_KeyboardW;
    private readonly InputAction m_UnitCursorMode_MouseScroll;
    public struct UnitCursorModeActions
    {
        private @GameInput m_Wrapper;
        public UnitCursorModeActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MouseLeftClick => m_Wrapper.m_UnitCursorMode_MouseLeftClick;
        public InputAction @MousPoint => m_Wrapper.m_UnitCursorMode_MousPoint;
        public InputAction @KeyboardCtrl => m_Wrapper.m_UnitCursorMode_KeyboardCtrl;
        public InputAction @Grap => m_Wrapper.m_UnitCursorMode_Grap;
        public InputAction @Scale => m_Wrapper.m_UnitCursorMode_Scale;
        public InputAction @Rotation => m_Wrapper.m_UnitCursorMode_Rotation;
        public InputAction @KeyboardX => m_Wrapper.m_UnitCursorMode_KeyboardX;
        public InputAction @KeyboardY => m_Wrapper.m_UnitCursorMode_KeyboardY;
        public InputAction @KeyboardZ => m_Wrapper.m_UnitCursorMode_KeyboardZ;
        public InputAction @KeyboardW => m_Wrapper.m_UnitCursorMode_KeyboardW;
        public InputAction @MouseScroll => m_Wrapper.m_UnitCursorMode_MouseScroll;
        public InputActionMap Get() { return m_Wrapper.m_UnitCursorMode; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UnitCursorModeActions set) { return set.Get(); }
        public void SetCallbacks(IUnitCursorModeActions instance)
        {
            if (m_Wrapper.m_UnitCursorModeActionsCallbackInterface != null)
            {
                @MouseLeftClick.started -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnMouseLeftClick;
                @MouseLeftClick.performed -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnMouseLeftClick;
                @MouseLeftClick.canceled -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnMouseLeftClick;
                @MousPoint.started -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnMousPoint;
                @MousPoint.performed -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnMousPoint;
                @MousPoint.canceled -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnMousPoint;
                @KeyboardCtrl.started -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardCtrl;
                @KeyboardCtrl.performed -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardCtrl;
                @KeyboardCtrl.canceled -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardCtrl;
                @Grap.started -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnGrap;
                @Grap.performed -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnGrap;
                @Grap.canceled -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnGrap;
                @Scale.started -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnScale;
                @Scale.performed -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnScale;
                @Scale.canceled -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnScale;
                @Rotation.started -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnRotation;
                @KeyboardX.started -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardX;
                @KeyboardX.performed -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardX;
                @KeyboardX.canceled -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardX;
                @KeyboardY.started -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardY;
                @KeyboardY.performed -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardY;
                @KeyboardY.canceled -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardY;
                @KeyboardZ.started -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardZ;
                @KeyboardZ.performed -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardZ;
                @KeyboardZ.canceled -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardZ;
                @KeyboardW.started -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardW;
                @KeyboardW.performed -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardW;
                @KeyboardW.canceled -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnKeyboardW;
                @MouseScroll.started -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnMouseScroll;
                @MouseScroll.performed -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnMouseScroll;
                @MouseScroll.canceled -= m_Wrapper.m_UnitCursorModeActionsCallbackInterface.OnMouseScroll;
            }
            m_Wrapper.m_UnitCursorModeActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MouseLeftClick.started += instance.OnMouseLeftClick;
                @MouseLeftClick.performed += instance.OnMouseLeftClick;
                @MouseLeftClick.canceled += instance.OnMouseLeftClick;
                @MousPoint.started += instance.OnMousPoint;
                @MousPoint.performed += instance.OnMousPoint;
                @MousPoint.canceled += instance.OnMousPoint;
                @KeyboardCtrl.started += instance.OnKeyboardCtrl;
                @KeyboardCtrl.performed += instance.OnKeyboardCtrl;
                @KeyboardCtrl.canceled += instance.OnKeyboardCtrl;
                @Grap.started += instance.OnGrap;
                @Grap.performed += instance.OnGrap;
                @Grap.canceled += instance.OnGrap;
                @Scale.started += instance.OnScale;
                @Scale.performed += instance.OnScale;
                @Scale.canceled += instance.OnScale;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @KeyboardX.started += instance.OnKeyboardX;
                @KeyboardX.performed += instance.OnKeyboardX;
                @KeyboardX.canceled += instance.OnKeyboardX;
                @KeyboardY.started += instance.OnKeyboardY;
                @KeyboardY.performed += instance.OnKeyboardY;
                @KeyboardY.canceled += instance.OnKeyboardY;
                @KeyboardZ.started += instance.OnKeyboardZ;
                @KeyboardZ.performed += instance.OnKeyboardZ;
                @KeyboardZ.canceled += instance.OnKeyboardZ;
                @KeyboardW.started += instance.OnKeyboardW;
                @KeyboardW.performed += instance.OnKeyboardW;
                @KeyboardW.canceled += instance.OnKeyboardW;
                @MouseScroll.started += instance.OnMouseScroll;
                @MouseScroll.performed += instance.OnMouseScroll;
                @MouseScroll.canceled += instance.OnMouseScroll;
            }
        }
    }
    public UnitCursorModeActions @UnitCursorMode => new UnitCursorModeActions(this);
    public interface IUnitCursorModeActions
    {
        void OnMouseLeftClick(InputAction.CallbackContext context);
        void OnMousPoint(InputAction.CallbackContext context);
        void OnKeyboardCtrl(InputAction.CallbackContext context);
        void OnGrap(InputAction.CallbackContext context);
        void OnScale(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnKeyboardX(InputAction.CallbackContext context);
        void OnKeyboardY(InputAction.CallbackContext context);
        void OnKeyboardZ(InputAction.CallbackContext context);
        void OnKeyboardW(InputAction.CallbackContext context);
        void OnMouseScroll(InputAction.CallbackContext context);
    }
}
